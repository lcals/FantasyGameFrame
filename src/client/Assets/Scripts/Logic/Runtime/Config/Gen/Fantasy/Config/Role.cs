// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Fantasy.Config
{

using global::System;
using global::System.Collections.Generic;
using global::FlatBuffers;

/// Item 
public struct Role : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_2_0_0(); }
  public static Role GetRootAsRole(ByteBuffer _bb) { return GetRootAsRole(_bb, new Role()); }
  public static Role GetRootAsRole(ByteBuffer _bb, Role obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Role __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  /// id
  public int Id { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  /// name
  public string Name { get { int o = __p.__offset(6); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetNameBytes() { return __p.__vector_as_span<byte>(6, 1); }
#else
  public ArraySegment<byte>? GetNameBytes() { return __p.__vector_as_arraysegment(6); }
#endif
  public byte[] GetNameArray() { return __p.__vector_as_array<byte>(6); }
  /// gender type
  public Fantasy.Config.GenderType Gender { get { int o = __p.__offset(8); return o != 0 ? (Fantasy.Config.GenderType)__p.bb.GetSbyte(o + __p.bb_pos) : Fantasy.Config.GenderType.Unknown; } }
  /// describe
  public string Describe { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetDescribeBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetDescribeBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetDescribeArray() { return __p.__vector_as_array<byte>(10); }
  /// default item
  public int DefaultItemId(int j) { int o = __p.__offset(12); return o != 0 ? __p.bb.GetInt(__p.__vector(o) + j * 4) : (int)0; }
  public int DefaultItemIdLength { get { int o = __p.__offset(12); return o != 0 ? __p.__vector_len(o) : 0; } }
#if ENABLE_SPAN_T
  public Span<int> GetDefaultItemIdBytes() { return __p.__vector_as_span<int>(12, 4); }
#else
  public ArraySegment<byte>? GetDefaultItemIdBytes() { return __p.__vector_as_arraysegment(12); }
#endif
  public int[] GetDefaultItemIdArray() { return __p.__vector_as_array<int>(12); }

  public static Offset<Fantasy.Config.Role> CreateRole(FlatBufferBuilder builder,
      int id = 0,
      StringOffset nameOffset = default(StringOffset),
      Fantasy.Config.GenderType gender = Fantasy.Config.GenderType.Unknown,
      StringOffset describeOffset = default(StringOffset),
      VectorOffset default_item_idOffset = default(VectorOffset)) {
    builder.StartTable(5);
    Role.AddDefaultItemId(builder, default_item_idOffset);
    Role.AddDescribe(builder, describeOffset);
    Role.AddName(builder, nameOffset);
    Role.AddId(builder, id);
    Role.AddGender(builder, gender);
    return Role.EndRole(builder);
  }

  public static void StartRole(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddId(FlatBufferBuilder builder, int id) { builder.AddInt(0, id, 0); }
  public static void AddName(FlatBufferBuilder builder, StringOffset nameOffset) { builder.AddOffset(1, nameOffset.Value, 0); }
  public static void AddGender(FlatBufferBuilder builder, Fantasy.Config.GenderType gender) { builder.AddSbyte(2, (sbyte)gender, 0); }
  public static void AddDescribe(FlatBufferBuilder builder, StringOffset describeOffset) { builder.AddOffset(3, describeOffset.Value, 0); }
  public static void AddDefaultItemId(FlatBufferBuilder builder, VectorOffset defaultItemIdOffset) { builder.AddOffset(4, defaultItemIdOffset.Value, 0); }
  public static VectorOffset CreateDefaultItemIdVector(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); for (int i = data.Length - 1; i >= 0; i--) builder.AddInt(data[i]); return builder.EndVector(); }
  public static VectorOffset CreateDefaultItemIdVectorBlock(FlatBufferBuilder builder, int[] data) { builder.StartVector(4, data.Length, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDefaultItemIdVectorBlock(FlatBufferBuilder builder, ArraySegment<int> data) { builder.StartVector(4, data.Count, 4); builder.Add(data); return builder.EndVector(); }
  public static VectorOffset CreateDefaultItemIdVectorBlock(FlatBufferBuilder builder, IntPtr dataPtr, int sizeInBytes) { builder.StartVector(1, sizeInBytes, 1); builder.Add<int>(dataPtr, sizeInBytes); return builder.EndVector(); }
  public static void StartDefaultItemIdVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(4, numElems, 4); }
  public static Offset<Fantasy.Config.Role> EndRole(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<Fantasy.Config.Role>(o);
  }
  public RoleT UnPack() {
    var _o = new RoleT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(RoleT _o) {
    _o.Id = this.Id;
    _o.Name = this.Name;
    _o.Gender = this.Gender;
    _o.Describe = this.Describe;
    _o.DefaultItemId = new List<int>();
    for (var _j = 0; _j < this.DefaultItemIdLength; ++_j) {_o.DefaultItemId.Add(this.DefaultItemId(_j));}
  }
  public static Offset<Fantasy.Config.Role> Pack(FlatBufferBuilder builder, RoleT _o) {
    if (_o == null) return default(Offset<Fantasy.Config.Role>);
    var _name = _o.Name == null ? default(StringOffset) : builder.CreateString(_o.Name);
    var _describe = _o.Describe == null ? default(StringOffset) : builder.CreateString(_o.Describe);
    var _default_item_id = default(VectorOffset);
    if (_o.DefaultItemId != null) {
      var __default_item_id = _o.DefaultItemId.ToArray();
      _default_item_id = CreateDefaultItemIdVector(builder, __default_item_id);
    }
    return CreateRole(
      builder,
      _o.Id,
      _name,
      _o.Gender,
      _describe,
      _default_item_id);
  }
}

public class RoleT
{
  [Newtonsoft.Json.JsonProperty("id")]
  public int Id { get; set; }
  [Newtonsoft.Json.JsonProperty("name")]
  public string Name { get; set; }
  [Newtonsoft.Json.JsonProperty("gender")]
  public Fantasy.Config.GenderType Gender { get; set; }
  [Newtonsoft.Json.JsonProperty("describe")]
  public string Describe { get; set; }
  [Newtonsoft.Json.JsonProperty("default_item_id")]
  public List<int> DefaultItemId { get; set; }

  public RoleT() {
    this.Id = 0;
    this.Name = null;
    this.Gender = Fantasy.Config.GenderType.Unknown;
    this.Describe = null;
    this.DefaultItemId = null;
  }
}


}
