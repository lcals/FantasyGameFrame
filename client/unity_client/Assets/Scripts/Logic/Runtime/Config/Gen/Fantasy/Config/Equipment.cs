// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace Fantasy.Config
{

public enum Equipment : byte
{
  NONE = 0,
  Weapon = 1,
};

public class EquipmentUnion {
  public Equipment Type { get; set; }
  public object Value { get; set; }

  public EquipmentUnion() {
    this.Type = Equipment.NONE;
    this.Value = null;
  }

  public T As<T>() where T : class { return this.Value as T; }
  public Fantasy.Config.WeaponT AsWeapon() { return this.As<Fantasy.Config.WeaponT>(); }
  public static EquipmentUnion FromWeapon(Fantasy.Config.WeaponT _weapon) { return new EquipmentUnion{ Type = Equipment.Weapon, Value = _weapon }; }

  public static int Pack(FlatBuffers.FlatBufferBuilder builder, EquipmentUnion _o) {
    switch (_o.Type) {
      default: return 0;
      case Equipment.Weapon: return Fantasy.Config.Weapon.Pack(builder, _o.AsWeapon()).Value;
    }
  }
}


}
